{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","styles/colors.ts","styles/H3.tsx","components/Transaction.tsx","utils/getWeb3.ts","components/Home.tsx","components/Settings.tsx","components/Accounts.tsx","components/Navigation.tsx","styles/PrimaryButton.tsx","components/SyntaxStyle.tsx","components/Line.tsx","components/Source.tsx","components/Sources.tsx","utils/getDecodedValue.ts","components/Variables.tsx","components/Tray.tsx","styles/Icon.tsx","styles/LoadingSmall.tsx","styles/IconBase.tsx","components/StatusIcon.tsx","styles/MetaWrapper.tsx","components/StatusMessage.tsx","styles/TabButton.tsx","styles/Tab.tsx","components/Tab.tsx","components/Tabs.tsx","components/DebugTooltip.tsx","components/KeyboardShortcuts.tsx","styles/List.tsx","styles/Loading.tsx","components/Debugger.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Mode","MILK_CHOCOLATE","DARK_CHOCOLATE","rgba","r","g","b","a","CI_RED","TEAL_1","WHITE","GRAY_300","CHOCOLATE_200","CHOCOLATE_400","RED_600","MINT_400","H3","styled","h3","Colors","TransactionWrapper","div","Transaction","transaction","port","to","hash","blockNumber","getWeb3","provider","Web3","providers","WebsocketProvider","headers","Origin","web3","HomeContainer","TransactionsBox","Home","useState","transactions","setTransactions","getPendingTransactions","subscription","eth","subscribe","error","result","console","log","on","txHash","getTransaction","txn","Date","now","prev","unsubscribe","useEffect","length","filter","v","i","SettingsContainer","SettingsForm","form","Settings","setPort","rpc","setRpc","newPort","setNewPort","newRpc","setNewRpc","onSubmit","preventDefault","type","value","onChange","target","AccountsContainer","AccountsBox","Account","Accounts","accounts","setAccounts","getAccounts","list","map","NavBarContainer","NavBar","ul","Navigation","className","style","color","button","SyntaxStyle","backgroundInherit","Row","isCurrent","LineContainer","span","LineNumber","Breakpoint","isBreakpoint","Line","lineNumber","lineContents","breakpoints","setBreakpoints","lineRef","sourceId","fileName","astId","lineNumberIndentLength","updateBreakpoint","toggleBreakpoint","filteredBreakpoints","breakpoint","line","compilationId","ref","onClick","repeat","dangerouslySetInnerHTML","__html","SourceWrapper","Source","selectedLineRef","activeLine","selectedLine","contractSource","visible","sourceIsActive","output","scrollTop","setScrollTop","sourceRef","useRef","lineDigitLength","toString","forEach","createRef","push","current","scrollIntoView","behavior","block","useLayoutEffect","scrollTo","top","left","onScroll","Sources","sources","activeTabIndex","runningTabIndex","sourcesWithMarkup","setSourcesWithMarkup","sourceComponents","source","index","ast","sourcePath","replace","highlightedSource","low","registerLanguage","definer","tree","highlight","unified","use","stringify","children","split","lineMarkup","prevState","getDecodedValue","inputObj","typeClass","variable","address","asBN","asBoolean","asString","asHex","asAddress","name","reduce","acc","curr","Object","assign","VariablesWrapper","Variables","variables","state","src","displayDataTypes","collapseStringsAfterLength","collapsed","TrayWrapper","Icon","Badge","Remove","Tray","setActiveTabIndex","setSelectedLine","removeBreakpoint","jumptoLine","size","rotate","keyframes","StyledIcon","TxSuccess","IconBase","TxFail","StatusIcon","status","LoadingSmall","title","radius","Wrapper","StatusContainer","StatusMessage","statusDescription","statusMessage","returnValue","kind","arguments","borderRadius","border","Tab","TabButtonStyle","selected","TabButton","StyledTab","ActiveIcon","tabName","tabIsRunning","TabsWrapper","Tabs","tabs","DebugTooltip","KeyboardShortcuts","executeAction","start","handlers","STEP_OVER","STEP_INTO","STEP_OUT","CONTINUE_UNTIL","RESTART","keyMap","allowChanges","List","marginBottom","Loading","props","DebuggerWrapper","Header","ButtonsWrapper","TopRowWrapper","SourceRowWrapper","VariablesTitle","BreakpointsTitle","TxHash","DebugButton","PrimaryButton","DebugButtonOver","RightColumnWrapper","LoadingWrapper","Debugger","session","setSession","setVariables","setReturnValue","setSources","setStatus","setActiveLine","setRunningTabIndex","useParams","providerUrl","Provider","create","url","axios","get","res","artifacts","data","input","compilations","Codec","Utils","shimArtifacts","TruffleDebugger","forTx","bugger","initializedSession","connect","ready","getTransactionSourcesBeforeStarting","sourcesInvolvedInTransaction","sourceIndicesInvolvedInTransaction","parseInt","_","includes","evm","view","selectors","solidity","currentSource","init","sourceRange","lines","debugAction","removeAllBreakpoints","addBreakpoint","continueUntilBreakpoint","stepOver","stepInto","stepOut","disabled","App","basename","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sHAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,M,2KCIbC,E,2GAVCC,EAAiB,UACjBC,EAAiB,UAMjBC,EAAO,SAACC,EAAWC,EAAWC,GAAvB,OAAqC,SAACC,GAAD,qBAC/CH,EAD+C,YAC1CC,EAD0C,YACrCC,EADqC,YAChCC,EADgC,Q,SAG7CP,K,cAAAA,E,aAAAA,M,KAKL,I,iIAEMQ,GAAS,UAaTC,GAAS,UAwBTC,IApBYP,EAAK,IAAM,IAAM,KAGfA,EAAK,IAAM,IAAM,KAGXA,EAAK,IAAM,EAAG,GAGhBA,EAAK,IAAM,IAAM,KAW3B,WAGRQ,GAAW,UAWXC,GAAgB,UAEhBC,GAAgB,UAuChBC,GAAU,UAwDVC,GAAW,UCpKlBC,GAAKC,IAAOC,GAAV,qHAGGC,GAGIH,M,iBCDTI,GAAqBH,IAAOI,IAAV,wRACRT,GFmEa,WEzCdU,GAZK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,KAElC,OACE,eAACJ,GAAD,UACE,gBAAC,KAAD,CAAMK,GAAE,WAAMF,EAAYG,KAAlB,YAA0BF,GAAlC,UACE,kDAAkBD,EAAYI,YAA9B,QACCJ,EAAYG,W,qBCbNE,GAdF,uCAAG,WAAOJ,GAAP,iBAAAjB,EAAA,6DAERsB,EAAW,IAAIC,KAAKC,UAAUC,kBAAnB,yBACGR,GAClB,CACES,QAAS,CACPC,OAAQ,0BANA,SAUK,IAAIJ,KAAKD,GAVd,cAURM,EAVQ,yBAWPA,GAXO,2CAAH,sDCKPC,GAAgBnB,IAAOI,IAAV,mDAIbgB,GAAkBpB,IAAOI,IAAV,iLACLF,IA6DDmB,GArDF,SAAC,GAAiB,IAAhBd,EAAe,EAAfA,KAAe,EACYe,mBAAgB,IAD5B,mBACrBC,EADqB,KACPC,EADO,KAGtBC,EAAsB,uCAAG,8BAAAnC,EAAA,sEAEVqB,GAAQJ,GAFE,OAEvBW,EAFuB,QAGvBQ,EAAeR,EAAKS,IAAIC,UAAU,wBAE3BA,WAAU,SAACC,EAAYC,GAC9BD,GAAOE,QAAQC,IAAIH,MAExBI,GAAG,OAHJ,uCAGY,WAAOC,GAAP,iBAAA5C,EAAA,+EAGU4B,EAAKS,IAAIQ,eAAeD,GAHlC,cAGFE,EAHE,OAKF9B,EACJ,eAAC,GAAD,CAAaA,YAAa8B,EAAK7B,KAAMA,GAAW8B,KAAKC,OAN/C,SASFd,GAAgB,SAACe,GACrB,MAAM,GAAN,mBAAWA,GAAX,CAAiBjC,OAVX,iCAaD,WACLoB,EAAac,iBAdP,kCAkBRT,QAAQC,IAAR,MAlBQ,0DAHZ,uDAL6B,2CAAH,qDAmC5B,OAJAS,qBAAU,WACRhB,MACC,IAGD,gBAACN,GAAD,WACE,eAAC,GAAD,2BACA,wFACGI,EAAamB,OACZnB,EAAaoB,QAAO,SAACC,EAAEC,GACrB,GAAIA,EAAE,EACJ,OAAOD,KAGV,eAACxB,GAAD,2CC3DL0B,GAAoB9C,IAAOI,IAAV,mDAIjB2C,GAAe/C,IAAOgD,KAAV,wMA4CHC,GA7BE,SAAC,GAAuC,IAAtC1C,EAAqC,EAArCA,KAAM2C,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,OAAiB,EACxB9B,mBAASf,GADe,mBAC/C8C,EAD+C,KACtCC,EADsC,OAE1BhC,mBAAS6B,GAFiB,mBAE/CI,EAF+C,KAEvCC,EAFuC,KAWtD,OACE,gBAACV,GAAD,WACE,eAAC,GAAD,uBACA,gBAACC,GAAD,CAAcU,SAVA,SAAClF,GACjBA,EAAEmF,iBACFR,EAAQG,GACRD,EAAOG,IAOL,UACE,0CAEE,wBAAOI,KAAK,OAAOC,MAAOP,EAASQ,SAAU,SAACtF,GAAD,OAAY+E,EAAW/E,EAAEuF,OAAOF,aAE/E,yCAEE,wBAAOD,KAAK,OAAOC,MAAOL,EAAQM,SAAU,SAACtF,GAAD,OAAYiF,EAAUjF,EAAEuF,OAAOF,aAE7E,wBAAOD,KAAK,SAASC,MAAM,kBC5C7BG,GAAoB/D,IAAOI,IAAV,mDAIjB4D,GAAchE,IAAOI,IAAV,iLACDF,IAQV+D,GAAUjE,IAAOI,IAAV,uDAkCE8D,GA9BE,SAAC,GAAiB,IAAhB3D,EAAe,EAAfA,KAAe,EACAe,mBAAgB,IADhB,mBACzB6C,EADyB,KACfC,EADe,KAG1BC,EAAW,uCAAG,8BAAA/E,EAAA,sEAECqB,GAAQJ,GAFT,cAEZW,EAFY,gBAGEA,EAAKS,IAAI0C,cAHX,OAGZC,EAHY,OAG0BC,KAAI,SAACjF,EAAQuD,GACvD,OAAQ,eAACoB,GAAD,qBAAcpB,EAAd,aAAoBvD,QAG9B8E,EAAYE,GAPM,2CAAH,qDAcjB,OAJA7B,qBAAU,WACR4B,MACC,IAGD,gBAACN,GAAD,WACE,eAAC,GAAD,uBACA,iFACA,eAACC,GAAD,UACGG,EAASzB,OACRyB,EACC,6D,UCxCLK,GAAkBxE,IAAOI,IAAV,0EAKfqE,GAASzE,IAAO0E,GAAV,iQAIiBxE,GAQhBA,GAiBEyE,GAbI,SAAC,GAClB,OAD0B,gBAExB,eAACH,GAAD,UACE,gBAACC,GAAD,WACE,8BAAI,uBAAMG,UAAU,YAAYC,MAAO,CAACC,MAAO5E,QAC/C,8BAAI,eAAC,KAAD,CAAMM,GAAG,IAAT,4BACJ,8BAAI,eAAC,KAAD,CAAMA,GAAG,YAAT,wBACJ,8BAAI,eAAC,KAAD,CAAMA,GAAG,YAAT,8B,+BCjCGR,OAAO+E,OAAtB,6OACgB7E,ICwDD8E,GAzDKhF,IAAOI,IAAV,ozBTsBG,qBA0EI,UAVM,UAuCL,US/FZF,GAUAA,GAOAA,GAMAA,ICpDA+E,GAAoB/E,GAQ3BgF,GAAMlF,IAAOI,IAAV,0QACO,gBAAG+E,EAAH,EAAGA,UAAH,MACH,UAATA,EVsHsB,UUtHoBF,OAC5B,gBAAGE,EAAH,EAAGA,UAAH,MACL,UAATA,EVuGsB,UUvGgBF,MAQ7B/E,IAKPkF,GAAgBpF,IAAOqF,KAAV,qIAObC,GAAatF,IAAOqF,KAAV,uFACLnF,IASLqF,GAAavF,IAAO6C,EAAV,4KAGL,qBAAG2C,aACKtF,GAAgBA,MA+FpBuF,GA3EF,SAAC,GAWC,IAVbC,EAUY,EAVZA,WACAC,EASY,EATZA,aACAR,EAQY,EARZA,UACAS,EAOY,EAPZA,YACAC,EAMY,EANZA,eACAC,EAKY,EALZA,QACAC,EAIY,EAJZA,SACAC,EAGY,EAHZA,SACAC,EAEY,EAFZA,MACAC,EACY,EADZA,uBACY,EAC6B5E,oBAAS,GADtC,mBACLkE,EADK,KACSW,EADT,KAaNC,EAAmB,WAGvB,GAFAD,GAAkBX,GAEdA,EAAc,CAChB,IAAMa,EAAsBT,EAAYjD,QACtC,SAAA2D,GAAU,OACRA,EAAWC,OAASb,GAAcY,EAAWP,WAAaA,KAE9DF,EAAeQ,OACV,CACL,IAAMC,EAAkB,CACtBC,KAAMb,EACNK,WACAS,cAAe,qBACfR,WACAC,SAEFJ,GAAe,SAACtD,GACd,MAAM,GAAN,mBAAWA,GAAX,CAAiB+D,SASvB,OAJA7D,qBAAU,WAhCR0D,EACEP,EAAYjD,QAAO,SAAA2D,GACjB,OACEA,EAAWC,OAASb,GAAcY,EAAWP,WAAaA,KAE3DrD,OAAS,KA6Bb,CAACkD,IAGF,gBAACV,GAAD,CAEEC,UAAWA,EACXsB,IAAKX,EAHP,UAKE,eAACP,GAAD,CACEX,UACEY,EAAe,oBAAsB,0BAEvCA,aAAcA,EACdkB,QAASN,IAEX,gBAAChB,GAAD,WACE,gBAACE,GAAD,CAAYoB,QAASN,EAArB,UACG,IAAIO,OAAOT,GACXR,EAAa,EAFhB,WAIA,uBAAMkB,wBAAyB,CAAEC,OAAQlB,UAjB7C,0BAC0BD,KChHxBoB,GAAgB9G,IAAOI,IAAV,2HAqGJ2G,GAjFA,SAAC,GAWD,IAMTC,EAhBJC,EAUY,EAVZA,WACAC,EASY,EATZA,aACAC,EAQY,EARZA,eACAvB,EAOY,EAPZA,YACAC,EAMY,EANZA,eACAuB,EAKY,EALZA,QACAC,EAIY,EAJZA,eACAtB,EAGY,EAHZA,SACAC,EAEY,EAFZA,SACAC,EACY,EADZA,MAEMqB,EAA4B,GADtB,EAEsBhG,mBAAS,GAF/B,mBAELiG,EAFK,KAEMC,EAFN,KAGNC,EAAYC,iBAAuB,MACnCC,EAAkBR,EAAezE,OAAOkF,WAAWlF,OAIzDyE,EAAeU,SAAQ,SAACtB,GACtB,IAAMT,EAAUgC,sBACZR,EAAO5E,SAAWwE,IACpBF,EAAkBlB,GAEpBwB,EAAOS,KACL,eAAC,GAAD,CACErC,WAAY4B,EAAO5E,OACnBiD,aAAcY,EACdpB,UAAWkC,GAAkBC,EAAO5E,SAAWuE,EAC/CrB,YAAaA,EACbC,eAAgBA,EAEhBC,QAASA,EACTC,SAAUA,EACVC,SAAUA,EACVC,MAAOA,EACPC,uBACEyB,GAAmBL,EAAO5E,OAAS,GAAGkF,WAAWlF,QAZrD,0BAM0B4E,EAAO5E,aAYrCD,qBAAU,WACJuE,GACEA,EAAgBgB,SAClBhB,EAAgBgB,QAAQC,eAAe,CACrCC,SAAU,OACVC,MAAO,aAIZ,CAACjB,IAEJkB,2BAAgB,WACVhB,GACwB,OAAtBK,EAAUO,SACZP,EAAUO,QAAQK,SAAS,CACzBC,IAAKf,EACLgB,KAAM,EACNL,SAAU,WAIf,CAACd,IAMJ,OACE,qCACGA,EACC,eAACN,GAAD,CAAe0B,SAPF,SAACjK,GAClBiJ,EAAajJ,EAAEuF,OAAOyD,YAMmBd,IAAKgB,EAA1C,SACE,eAAC,GAAD,UAAcH,MAEd,Q,8DC7BKmB,GAvDC,SAAC,GAQF,IAPbC,EAOY,EAPZA,QACAC,EAMY,EANZA,eACA/C,EAKY,EALZA,YACAC,EAIY,EAJZA,eACAoB,EAGY,EAHZA,WACAC,EAEY,EAFZA,aACA0B,EACY,EADZA,gBACY,EACsCtH,mBAAgB,IADtD,mBACLuH,EADK,KACcC,EADd,KAGNC,EAAmBL,EAAQnE,KAAI,SAACyE,EAAaC,GACjD,IAAMhD,EAAQ+C,EAAOE,IAAIpK,GACnBkH,EAAWgD,EAAOG,WAAWC,QAAQ,WAAY,IACjDC,EAA8B,GAEpC,GAAiC,IAA7BR,EAAkBnG,OAAc,CAClC4G,KAAIC,iBAAiB,WAAYC,YACjC,IAAMC,EAAYH,KAAII,UAAU,WAAYV,EAAOA,QAAQpF,MACpC+F,OAAUC,IAAIC,MAElCA,UAAU,CAAElG,KAAM,OAAQmG,SAAUL,IACpC7B,WAEemC,MAAM,MAAMlC,SAAQ,SAACmC,GACrCX,EAAkBtB,KAAKiC,MAGzBlB,GAAqB,SAAAmB,GAAS,4BAAQA,GAAR,CAAmBZ,OAGnD,OACE,eAAC,GAAD,CAEEjC,QAASnB,IAAU0C,EACnBxB,eACEkC,EAAkB3G,OAAS,EACvB2G,EACAR,EAAkBI,GAExBhC,WAAYA,EACZC,aAAcA,EACdtB,YAAaA,EACbC,eAAgBA,EAChBwB,eAAgBpB,IAAU2C,EAC1B7C,SAAUiD,EAAOlK,GACjBmH,MAAOA,EACPD,SAAUA,GAfZ,mBACmBC,OAmBvB,OAAO,qCAAG8C,K,UCZGmB,GA/DS,SAAlBA,EAAmBC,GACvB,IAAMC,EAAYD,EAASxG,KAAKyG,UAEhC,GAAID,EAAStI,MACX,MAAO,KAGT,GAAkB,UAAduI,EAAuB,CACzB,IAAMC,EAAmBF,EAASxG,KAAK0G,SACvC,GACe,UAAbA,GACa,YAAbA,GACa,gBAAbA,EAEA,OAAOF,EAASvG,MAIpB,MAAkB,aAAdwG,EACKD,EAASvG,MAAM0G,QAGN,QAAdF,GAAqC,SAAdA,EAClBD,EAASvG,MAAM2G,KAAK3C,WAGX,SAAdwC,EACKD,EAASvG,MAAM4G,UAGN,WAAdJ,EACKD,EAASvG,MAAM6G,SAGN,UAAdL,EACKD,EAASvG,MAAM8G,MAGN,YAAdN,EACKD,EAASvG,MAAM+G,UAGN,WAAdP,EACWD,EAASvG,MACMW,KAAI,gBAAGqG,EAAH,EAAGA,KAAMhH,EAAT,EAASA,MAAT,uBAC7BgH,EAAOV,EAAgBtG,OAEUiH,QAClC,SAACC,EAAUC,GAAX,OAAyBC,OAAOC,OAAOH,EAAKC,KAC5C,IAKc,UAAdX,EACYD,EAASvG,MACAW,IAAI2F,GAIvB,GAAN,OAAUE,EAAV,gC,qBCrDIc,GAAmBlL,IAAOI,IAAV,6ZACNT,IAgDDwL,GAzBG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,UACbC,EAAa,GAEfD,GACmBJ,OAAOtM,KAAK0M,GACpBvD,SAAQ,SAAAwC,GACnB,IAAMzG,EAAQsG,GAAgBkB,EAAUf,IACxCgB,EAAMhB,GAAYzG,KAItB,OACE,eAACsH,GAAD,UACE,eAAC,KAAD,CACEN,KAAM,KACNU,IAAKD,EACLE,kBAAkB,EAClBC,2BAA4B,GAC5BC,UAAW,OC7CbC,GAAc1L,IAAOI,IAAV,0JACDF,IAQVgF,GAAMlF,IAAOI,IAAV,mMf4Ce,WehClBmF,GAAavF,IAAOqF,KAAV,oDAIVsG,GAAO3L,IAAOqF,KAAV,0CACCnF,IAGL0L,GAAQ5L,IAAOqF,KAAV,gJACKnF,GfuCa,WehCvB2L,GAAS7L,IAAOqF,KAAV,mEACDnF,IA6DI4L,GAlDF,SAAC,GAKC,IAJblG,EAIY,EAJZA,YACAC,EAGY,EAHZA,eACAkG,EAEY,EAFZA,kBACAC,EACY,EADZA,gBAEMC,EAAmB,SAAClG,EAAkBL,GAC1C,IAAMW,EAAsBT,EAAYjD,QAAO,SAAC2D,GAC9C,OAAOA,EAAWC,OAASb,GAAcY,EAAWP,WAAaA,KAEnEF,EAAeQ,IAQX/B,EAAOsB,EAAYrB,KAAI,SAAC+B,EAAiB2C,GAC7C,IAAMlD,EAAWO,EAAWP,SACtBC,EAAWM,EAAWN,SACtBN,EAAaY,EAAWC,KACxBN,EAAQK,EAAWL,MACzB,OACE,gBAAC,GAAD,WACE,eAAC0F,GAAD,CACE/G,UAAS,oBACT8B,QAAS,kBAAMuF,EAAiBlG,EAAUL,MAE5C,gBAAC,GAAD,CAAYgB,QAAS,kBAhBR,SAACT,EAAeP,GACjCqG,EAAkB9F,GAClB+F,EAAgBtG,GAcewG,CAAWjG,EAAOP,IAA7C,UACGM,EACD,eAAC4F,GAAD,UAAQlG,EAAa,OAEvB,eAACmG,GAAD,CACEjH,UAAS,sBACT8B,QAAS,kBAAMuF,EAAiBlG,EAAUL,QAX9C,0BAA6BuD,OAiBjC,OACE,eAACyC,GAAD,UACGpH,EAAK5B,OAAS,EACX4B,EADH,0DC9FM6H,GAAO,OACLnM,OAAO6C,EAAtB,8JACWsJ,GACCA,ICGNC,GAASC,YAAH,wHAUNC,GAAatM,YAAO2L,GAAP3L,CAAH,iEACDoM,IAGA,uBAAGxH,iBAAH,MAAe,GAAf,SACb,eAAC0H,GAAD,CAAY1H,UAAS,yBAAoBA,MCrB9BuH,GAAO,OACLnM,OAAO6C,EAAtB,8JACWsJ,GACCA,ICCNI,GAAYvM,YAAOwM,GAAPxM,CAAH,0CnBWS,WmBPlByM,GAASzM,YAAOwM,GAAPxM,CAAH,0CACDE,IAwBIwM,GAjBI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OACpB,OACE,qCACc,OAAXA,EACC,eAACC,GAAD,IACED,EACF,eAACJ,GAAD,CACE3H,UAAU,sBACViI,MAAM,0BAGR,eAACJ,GAAD,CAAQ7H,UAAU,sBAAsBiI,MAAM,0BCzBzCC,GAAS,SCChBC,IDCS/M,IAAOI,IAAtB,uFACgBF,GAJO,SAMJ4M,ICJH9M,IAAOI,IAAV,sFAKP4M,GAAkBhN,IAAOI,IAAV,uSrBgGE,UqB9FDF,GACXA,GAGQ4M,IA8CJG,GA/BO,SAAC,GAA6B,IAC9CC,EACAC,EAFmBC,EAA0B,EAA1BA,YAIvB,IAAe,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAa1K,QAAS,EACxB,OAAQ0K,EAAY,GAAGC,MACrB,IAAK,SACHH,EAAiB,4CACjBC,EAAa,UAAMC,EAAY,GAAGC,KAArB,eAAgCD,EAAY,GAAGE,UAAU,GAAG1J,MAAMA,MAAM6G,UACrF,MACF,IAAK,eACL,IAAK,SACL,QACE,OAAO,+BAKb,OACE,qCACG2C,EACC,eAACL,GAAD,UACE,eAACC,GAAD,oBACME,EADN,aAC4BC,OAG5B,QCtDJI,GAAe,YAIfC,GAAM,UAHQ,WAGR,YAFQ,QAER,YADQtN,WAEP2E,GAAK,0BACF2I,GADE,+BAECA,GAFD,6BAGDA,GAHC,+HAQGD,GARH,gBAQuBA,GARvB,0DAWKA,GAXL,YAWqBA,GAXrB,kCAYEC,GAZF,wDAeGD,GAfH,2HCUHE,IDaGzN,IAAO+E,OAAV,6EACXF,GAEO3E,GC1BCF,IAAOI,IAAV,8IACLsN,IAGY,qBAAGC,SACJzN,EAAwB,iBAC5B,qBAAGyN,SACC,QAAUzN,MCJnB0N,GAAY5N,YAAO6N,GAAP7N,CAAH,oVACC,gBAAG2I,EAAH,EAAGA,eAAgBM,EAAnB,EAAmBA,MAAnB,MACZ,UAAAN,IAAmBM,ExBoBD,UwBpBiC/I,MACrCA,GAKAA,GACLA,GAEEA,IAWT4N,GAAa9N,IAAOI,IAAV,qJxBuFU,WwB9CXqN,GAxBH,SAAC,GAME,IALbxE,EAKY,EALZA,MACA8E,EAIY,EAJZA,QACApF,EAGY,EAHZA,eACAoD,EAEY,EAFZA,kBACAiC,EACY,EADZA,aAEA,OAEE,cADA,CACA,sBACE,gBAAC,GAAD,CACEtH,QAAS,kBAAMqF,EAAkB9C,IACjC0E,SAAUhF,IAAmBM,EAC7BN,eAAgBA,EAChBM,MAAOA,EAJT,UAMG8E,EAAS,IACTC,EAAe,eAACF,GAAD,CAAYlJ,UAAU,sBAAyB,WCxDjEqJ,GAAcjO,IAAOI,IAAV,8FA8BF8N,GAxBF,SAAC,GAKC,IAJbxF,EAIY,EAJZA,QACAqD,EAGY,EAHZA,kBACApD,EAEY,EAFZA,eACAC,EACY,EADZA,gBAEMuF,EAAOzF,EAAQnE,KAAI,SAACyE,GACxB,IAAMhD,EAAWgD,EAAOG,WAAWC,QAAQ,WAAY,IACjDnD,EAAQ+C,EAAOE,IAAIpK,GACzB,OACE,eAAC,GAAD,CAEEmK,MAAOhD,EACP8H,QAAS/H,EACT+F,kBAAmBA,EACnBpD,eAAgBA,EAChBqF,aAAc/H,IAAU2C,GAN1B,mBACmB3C,OAUvB,OAAO,eAACgI,GAAD,UAAcE,KCVRC,IAhBF,GAAD,O1BkDY,W0B5CH,SAAC,GAAgC,EAA9BvB,MAA+B,IAAxB/C,EAAuB,EAAvBA,SAC7B,OAEE,cADA,CACA,sBACGA,M,UC4BQuE,GA1CW,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,MA6BpCC,EAAW,CACfC,UArBW,WACXH,EAAc,SAqBdI,UAlBW,WACXJ,EAAc,SAkBdK,SAfU,WACVL,EAAc,QAedM,eAZoB,WACpBN,EAAc,kBAYdO,QATc,WACdN,MAWF,OACE,eAAC,iBAAD,CAAeO,OArCF,CACbL,UAAW,CAAC,IAAK,OACjBC,UAAW,CAAC,IAAK,OACjBC,SAAU,CAAC,IAAK,aAChBC,eAAgB,CAAC,IAAK,MACtBC,QAAS,CAAC,MAgCqBL,SAAUA,EAAUO,cAAc,KCjCtDC,GAPFhP,IAAOI,IAAV,wGAGa,oBAAG6O,aAAH,kBAAkB,OAAlB,K,qBCJjBlC,GAAU/M,IAAOI,IAAV,qHAYE8O,GALC,SAACC,GAAD,OACd,eAAC,GAAD,6BAAaA,GAAb,aACE,eAAC,KAAD,CAAYrK,MAAO5E,Q,uECcjBkP,GAAkBpP,YAAOgP,GAAPhP,CAAH,kKAQfqP,GAASrP,YAAOD,GAAPC,CAAH,qEAKNsP,GAAiBtP,IAAOI,IAAV,8CAIdmP,GAAgBvP,IAAOI,IAAV,mJAOboP,GAAmBxP,IAAOI,IAAV,2KAQhB6N,GAAcjO,IAAOI,IAAV,qEAMXqP,GAAiBzP,YAAOD,GAAPC,CAAH,uDAId0P,GAAmB1P,YAAOD,GAAPC,CAAH,sDAIhB2P,GAAS3P,IAAOqF,KAAV,uDAINuK,GAAc5P,YAAO6P,GAAP7P,CAAH,0EAKX8P,GAAkB9P,YAAO4P,GAAP5P,CAAH,sRAiBf8G,GAAgB9G,IAAOI,IAAV,wJAKHF,IAIV6P,GAAqB/P,IAAOI,IAAV,sHAMlB4P,GAAiBhQ,YAAOkP,GAAPlP,CAAH,oDAyOLiQ,GArOE,SAAC,GAAQ,sBACM3O,mBAAqB,MAD5B,mBAChB4O,EADgB,KACPC,EADO,OAEW7O,mBAAqB,MAFhC,mBAEhB8J,EAFgB,KAELgF,EAFK,OAGe9O,mBAAoB,MAHnC,mBAGhB8L,EAHgB,KAGHiD,EAHG,OAIO/O,mBAAoB,MAJ3B,mBAIhBoH,EAJgB,KAIP4H,EAJO,OAKehP,mBAAgB,IAL/B,mBAKhBsE,EALgB,KAKHC,EALG,OAMKvE,mBAAyB,MAN9B,mBAMhBqL,EANgB,KAMR4D,EANQ,OAOiBjP,mBAAiB,GAPlC,mBAOhB4F,EAPgB,KAOF8E,EAPE,OAQa1K,mBAAiB,GAR9B,mBAQhB2F,EARgB,KAQJuJ,EARI,OASqBlP,mBAAiB,GATtC,mBAShBqH,EATgB,KASAoD,EATA,OAUuBzK,mBAAiB,GAVxC,mBAUhBsH,EAVgB,KAUC6H,EAVD,OAYAC,eAAjBxO,EAZiB,EAYjBA,OAAQ3B,EAZS,EAYTA,KAERoQ,EAAW,2BAAuBpQ,GAClCD,EAAmB,CACvBG,KAAMyB,GAGFtB,EAAWgQ,KAASC,OAAO,CAC/BC,IAAKH,IAGDpC,EAAK,uCAAG,8CAAAjP,EAAA,6DACZ8Q,EAAa,MACbD,EAAW,MACXE,EAAe,MACfxK,EAAe,IAJH,SAMUkL,KAAMC,IAAI,oCANpB,cAMNC,EANM,OAONC,EAAiBD,EAAIE,MAErBC,EAEF,CACFC,aAAc,KAGVA,aAAeC,gBAAmBC,MAAMC,cAC5CN,GAhBU,UAmBSO,KAAgBC,MAAMpR,EAAYG,KAAlC,cACnBG,YACGwQ,IArBO,eAmBNO,EAnBM,OAwBNC,EAAqBD,EAAOE,UAxBtB,UAyBND,EAAmBE,QAzBb,yBA2B+BC,+CACzCJ,GA5BU,eA2BNK,EA3BM,OA+BNC,EAAqCD,EAA6BzN,KACtE,SAACyE,GACC,OAAOkJ,SAASlJ,EAAOlK,GAAI,OAIzB4J,EAAU0I,EAAMC,aAAa,GAAG3I,QAAQ/F,QAAO,SAACwP,EAAQlJ,GAC5D,OAAOgJ,EAAmCG,SAASnJ,MAGrDqH,EACE5H,GAGFyH,EAAWyB,GA7CC,KA8CZxB,EA9CY,UA8COwB,EAAmBxG,YA9C1B,+CA+CZiF,EA/CY,UA+CSuB,EAAmBxE,cA/C5B,+CAgDZmD,EAhDY,UAgDIqB,EAAmBvG,MAAMgH,IAAI/R,YAAYqM,OAhD7C,oDAkDgBiF,EAAmBU,KAC7Cb,KAAgBc,UAAUC,SAASxK,QAAQgB,QAnDjC,QAkDNyJ,EAlDM,OAqDZhC,EAAmBgC,EAAcvJ,IAAIpK,IACrCiN,EAAkB0G,EAAcvJ,IAAIpK,IAE9B4T,EAAOd,EAAmBU,KAC9Bb,KAAgBc,UAAUC,SAASxK,QAAQ2K,aAG7CnC,EAAckC,EAAKE,MAAMrE,MAAMhI,MAC/ByF,EAAgB0G,EAAKE,MAAMrE,MAAMhI,MA7DrB,4CAAH,qDAgEL+H,EAAa,uCAAG,WAAOuE,GAAP,iBAAAvT,EAAA,0DAEhB4Q,EAFgB,sBAGV2C,EAHU,OAIX,kBAJW,OAYX,SAZW,QAeX,SAfW,QAkBX,QAlBW,wCAKR3C,EAAQ4C,uBALA,cAMdlN,EAAYiC,QAAZ,uCACE,WAAMvB,GAAN,SAAAhH,EAAA,sEAA0B4Q,EAAQ6C,cAAczM,GAAhD,mFADF,uDANc,SASR4J,EAAQ8C,0BATA,4DAaR9C,EAAQ+C,WAbA,6DAgBR/C,EAAQgD,WAhBA,6DAmBRhD,EAAQiD,UAnBA,gEAyBlB/C,EAzBkB,UAyBCF,EAAQ9E,YAzBT,+CA0BlBiF,EA1BkB,UA0BGH,EAAQ9C,cA1BX,oDA4BG8C,EAAQoC,KAC3Bb,KAAgBc,UAAUC,SAASxK,QAAQgB,QA7B3B,eA4BZA,EA5BY,OA+BlByH,EAAmBzH,EAAOE,IAAIpK,IAC9BiN,EAAkB/C,EAAOE,IAAIpK,IAhCX,UAkCQoR,EAAQoC,KAChCb,KAAgBc,UAAUC,SAASxK,QAAQ2K,aAnC3B,QAkCZA,EAlCY,OAqClBnC,EAAcmC,EAAYC,MAAMrE,MAAMhI,MACtCyF,EAAgB2G,EAAYC,MAAMrE,MAAMhI,MAtCtB,4CAAH,sDA8CnB,OAJA9D,qBAAU,WACR8L,MACC,IAGD,gBAACa,GAAD,WACE,eAAC,GAAD,CAAmBd,cAAeA,EAAeC,MAAOA,IACxD,gBAACc,GAAD,WACE,eAAC,GAAD,CAAY1C,OAAQA,IADtB,IAGE,gBAACgD,GAAD,oBAEGrP,EAAYG,MAAZ,SAEH,eAAC,GAAD,CAAe2M,YAAaA,OAE9B,gBAACkC,GAAD,WACE,eAAC,GAAD,CAAczC,MAAK,qBAAnB,SACE,eAAC+C,GAAD,CACEwD,UAAWhI,EACX1E,QAAS,kBAAM4H,EAAc,kBAF/B,SAIE,oBAAG1J,UAAU,oBAGjB,eAAC,GAAD,CAAciI,MAAK,uBAAnB,SACE,gBAACiD,GAAD,CACEpJ,QAAS,kBAAM4H,EAAc,SAC7B8E,UAAWhI,EAFb,UAIE,oBAAGxG,UAAU,mBACb,oBAAGA,UAAU,sBAGjB,eAAC,GAAD,CAAciI,MAAK,uBAAnB,SACE,eAAC+C,GAAD,CACElJ,QAAS,kBAAM4H,EAAc,SAC7B8E,UAAWhI,EAFb,SAIE,oBAAGxG,UAAU,+BAGjB,eAAC,GAAD,CAAciI,MAAK,4BAAnB,SACE,eAAC+C,GAAD,CACElJ,QAAS,kBAAM4H,EAAc,QAC7B8E,UAAWhI,EAFb,SAIE,oBAAGxG,UAAU,4BAGjB,eAAC,GAAD,CAAciI,MAAK,cAAnB,SACE,eAAC+C,GAAD,CAAalJ,QAAS6H,EAAtB,SACE,oBAAG3J,UAAU,2BAIlBwG,EACC,uCACE,gBAACmE,GAAD,WACE,eAAC,GAAD,UACE,eAAC,GAAD,CACE7G,QAASA,EACTqD,kBAAmBA,EACnBpD,eAAgBA,EAChBC,gBAAiBA,MAGrB,eAAC6G,GAAD,2BAEF,gBAACD,GAAD,WACE,eAAC,GAAD,UACE,eAAC,GAAD,CACE9G,QAASA,EACTC,eAAgBA,EAChB1B,WAAYA,EACZC,aAAcA,EACdtB,YAAaA,EACbC,eAAgBA,EAChB+C,gBAAiBA,MAGrB,gBAACmH,GAAD,WACE,eAAC,GAAD,CAAW3E,UAAWA,IACtB,eAACsE,GAAD,0BACA,eAAC,GAAD,CACE9J,YAAaA,EACbC,eAAgBA,EAChBkG,kBAAmBA,EACnBC,gBAAiBA,aAMzB,eAACgE,GAAD,QC1ROqD,OA5Cf,WAAgB,IAAD,EACW/R,mBAAiB,MAD5B,mBACNf,EADM,KACA2C,EADA,OAES5B,mBAAiB,aAF1B,mBAEN6B,EAFM,KAEDC,EAFC,KAIb,OACE,eAAC,KAAD,CAAekQ,SAAS,SAAxB,SACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,sBAAK5O,UAAU,MAAf,SACE,uBAAKA,UAAU,WAAf,UACE,eAAC,GAAD,IACA,eAAC,GAAD,CAAMrE,KAAMA,WAIlB,eAAC,KAAD,CAAOgT,KAAK,YAAYC,OAAK,EAA7B,SACE,sBAAK5O,UAAU,MAAf,SACE,uBAAKA,UAAU,WAAf,UACE,eAAC,GAAD,IACA,eAAC,GAAD,CAAUrE,KAAMA,WAItB,eAAC,KAAD,CAAOgT,KAAK,YAAYC,OAAK,EAA7B,SACE,sBAAK5O,UAAU,MAAf,SACE,uBAAKA,UAAU,WAAf,UACE,eAAC,GAAD,IACA,eAAC,GAAD,CAAUrE,KAAMA,EAAM2C,QAASA,EAASC,IAAKA,EAAKC,OAAQA,WAIhE,eAAC,KAAD,CAAOmQ,KAAK,iBAAZ,SACE,sBAAK3O,UAAU,MAAf,SACE,uBAAKA,UAAU,WAAf,UACE,eAAC,GAAD,IACA,eAAC,GAAD,iBCrCC6O,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.16c0b3de.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1012;","// Neutrals\nexport const DARK_CREAM = \"#e0dad7\";\nexport const MILK_CHOCOLATE = \"#5e464d\";\nexport const DARK_CHOCOLATE = \"#33262a\";\n\n// Brand Primaries\nexport const PURPLE_1 = \"#8731e8\";\n\n// Utilities\nexport const rgba = (r: number, g: number, b: number) => (a: number): string =>\n  `rgba(${r},${g},${b},${a})`;\n\nexport enum Mode {\n  LIGHT = \"light\",\n  DARK = \"dark\",\n}\n\nexport const CI_GREEN = \"#00A311\";\nexport const CI_YELLOW = \"#f2e941\";\nexport const CI_RED = \"#d60000\";\n\nexport const BLUE_LINK = \"#25a9e0\";\nexport const BLUE_LINK_ON_LIGHT_CREAM = \"#0070a3\";\nexport const BLUE_LINK_ON_DARK_CREAM = \"#005279\";\n\nexport const GREY = \"rgba(0, 0, 0, 0.5)\";\n\nexport const LIGHT_YELLOW = \"#f5f3c5\";\n\nexport const TAG_BORDER_YELLOW = \"rgb(242, 233, 65)\";\nexport const TAG_BORDER_BEIGE = \"rgb(224, 218, 215)\";\n\nexport const TEAL_1 = \"#47BAA7\";\nexport const TEAL_2 = \"#CAF0E5\";\n\nexport const ALTO = \"#DCDCDC\";\nexport const RGBA_ALTO = rgba(0xdc, 0xdc, 0xdc);\n\nexport const DANUBE = \"#6c88d1\";\nexport const RGBA_DANUBE = rgba(0x6c, 0x88, 0xd1);\n\nexport const GUARDSMANRED = \"#d10000\";\nexport const RGBA_GUARDSMANRED = rgba(0xd1, 0, 0);\n\nexport const SPRINGWOOD = \"#f8f5f0\";\nexport const RGBA_SPRINGWOOD = rgba(0xf8, 0xf5, 0xf0);\n\n/*\nDESIGN SYSTEM COLORS\n*/\n\n/*\n * NEUTRALS\n */\n\n// GRAY\nexport const WHITE = \"#ffffff\";\nexport const GRAY_100 = \"#f4f4f4\";\nexport const GRAY_200 = \"#e5e5e5\";\nexport const GRAY_300 = \"#c8c8c8\";\nexport const GRAY_400 = \"#a9a9a9\";\nexport const GRAY_500 = \"#858585\";\nexport const GRAY_600 = \"#636363\";\nexport const GRAY_700 = \"#4a4a4a\";\nexport const GRAY_800 = \"#363636\";\nexport const GRAY_900 = \"#292929\";\nexport const BLACK = \"#000000\";\n\n// Chocolate\nexport const CHOCOLATE_100 = \"#f8f5f0\";\nexport const CHOCOLATE_200 = \"#efe5dc\";\nexport const CHOCOLATE_300 = \"#d6c4ba\";\nexport const CHOCOLATE_400 = \"#bca296\";\nexport const CHOCOLATE_500 = \"#967e75\";\nexport const CHOCOLATE_600 = \"#725b54\";\nexport const CHOCOLATE_700 = \"#56443f\";\nexport const CHOCOLATE_800 = \"#3f302d\";\nexport const CHOCOLATE_900 = \"#2f2323\";\n\n/*\n * COLORS\n */\n\n// WATERMELON\nexport const WATERMELON_100 = \"#ffeff4\";\nexport const WATERMELON_200 = \"#ffd9e5\";\nexport const WATERMELON_300 = \"#ffadc8\";\nexport const WATERMELON_400 = \"#ff7ea9\";\nexport const WATERMELON_500 = \"#dc5985\";\nexport const WATERMELON_600 = \"#b3004f\";\nexport const WATERMELON_700 = \"#87003e\";\nexport const WATERMELON_800 = \"#690030\";\nexport const WATERMELON_900 = \"#540026\";\n\n// PINK\nexport const PINK_100 = \"#fdeaf9\";\nexport const PINK_200 = \"#fbcef2\";\nexport const PINK_300 = \"#f698e3\";\nexport const PINK_400 = \"#f05ed2\";\nexport const PINK_500 = \"#ea1bc0\";\nexport const PINK_600 = \"#b50d93\";\nexport const PINK_700 = \"#870a6e\";\nexport const PINK_800 = \"#630750\";\nexport const PINK_900 = \"#4b053d\";\n\n// RED\nexport const RED_100 = \"#fbe9e9\";\nexport const RED_200 = \"#f7cbcb\";\nexport const RED_300 = \"#ed9191\";\nexport const RED_400 = \"#e35353\";\nexport const RED_500 = \"#d80b0b\";\nexport const RED_600 = \"#a60000\";\nexport const RED_700 = \"#7c0000\";\nexport const RED_800 = \"#5b0000\";\nexport const RED_900 = \"#450000\";\n\n// ORANGE\nexport const ORANGE_100 = \"#fff3e4\";\nexport const ORANGE_200 = \"#ffe0be\";\nexport const ORANGE_300 = \"#fbbd7a\";\nexport const ORANGE_400 = \"#dc9e5b\";\nexport const ORANGE_500 = \"#b87a37\";\nexport const ORANGE_600 = \"#965815\";\nexport const ORANGE_700 = \"#7a4101\";\nexport const ORANGE_800 = \"#592f01\";\nexport const ORANGE_900 = \"#442401\";\n\n// PORSCHE\nexport const PORSCHE_1 = \"#e4a663\";\n\n// YELLOW\nexport const YELLOW_100 = \"#fffdde\";\nexport const YELLOW_200 = \"#fffbbc\";\nexport const YELLOW_300 = \"#e9e26f\";\nexport const YELLOW_400 = \"#d1cb57\";\nexport const YELLOW_500 = \"#b6b03c\";\nexport const YELLOW_600 = \"#7b7619\";\nexport const YELLOW_700 = \"#69651a\";\nexport const YELLOW_800 = \"#3f3b01\";\nexport const YELLOW_900 = \"#302d01\";\n\n// BRUSH\nexport const BRUSH_100 = \"#f9ffe2\";\nexport const BRUSH_200 = \"#eef6cc\";\nexport const BRUSH_300 = \"#c6d38e\";\nexport const BRUSH_400 = \"#a7b46f\";\nexport const BRUSH_500 = \"#83904b\";\nexport const BRUSH_600 = \"#616e29\";\nexport const BRUSH_700 = \"#485510\";\nexport const BRUSH_800 = \"#354001\";\nexport const BRUSH_900 = \"#293101\";\n\n// GREEN\nexport const GREEN_100 = \"#effcf0\";\nexport const GREEN_200 = \"#e3f8e6\";\nexport const GREEN_300 = \"#b5edba\";\nexport const GREEN_400 = \"#81e28c\";\nexport const GREEN_500 = \"#2ed047\";\nexport const GREEN_600 = \"#00850f\";\nexport const GREEN_700 = \"#005507\";\nexport const GREEN_800 = \"#003b06\";\nexport const GREEN_900 = \"#002b04\";\n\n// MINT\nexport const MINT_100 = \"#ddfff9\";\nexport const MINT_200 = \"#c8fbf2\";\nexport const MINT_300 = \"#90f4e3\";\nexport const MINT_400 = \"#3fe0c5\";\nexport const MINT_500 = \"#17b89d\";\nexport const MINT_600 = \"#007d65\";\nexport const MINT_700 = \"#005a49\";\nexport const MINT_800 = \"#004135\";\nexport const MINT_900 = \"#003127\";\n\n// BLUE\nexport const BLUE_100 = \"#edfaff\";\nexport const BLUE_200 = \"#daf4fc\";\nexport const BLUE_300 = \"#a0e4f8\";\nexport const BLUE_400 = \"#64d2f4\";\nexport const BLUE_500 = \"#39b0de\";\nexport const BLUE_600 = \"#0070a3\";\nexport const BLUE_700 = \"#005279\";\nexport const BLUE_800 = \"#003b56\";\nexport const BLUE_900 = \"#002c40\";\n\n// PERIWINKLE\nexport const PERIWINKLE_100 = \"#f0f5ff\";\nexport const PERIWINKLE_200 = \"#d9e6ff\";\nexport const PERIWINKLE_300 = \"#adcbff\";\nexport const PERIWINKLE_400 = \"#8eace0\";\nexport const PERIWINKLE_500 = \"#6a88bc\";\nexport const PERIWINKLE_600 = \"#48669a\";\nexport const PERIWINKLE_700 = \"#2f4d81\";\nexport const PERIWINKLE_800 = \"#1b396d\";\nexport const PERIWINKLE_900 = \"#0e2c60\";\n\n// PURPLE\nexport const PURPLE_100 = \"#f5edfd\";\nexport const PURPLE_200 = \"#e7d5fa\";\nexport const PURPLE_300 = \"#cba6f5\";\nexport const PURPLE_400 = \"#ae74ef\";\nexport const PURPLE_500 = \"#8c3ae9\";\nexport const PURPLE_600 = \"#6926b4\";\nexport const PURPLE_700 = \"#4e1c87\";\nexport const PURPLE_800 = \"#391562\";\nexport const PURPLE_900 = \"#2b104b\";\n","import styled from \"styled-components\";\nimport * as Colors from \"./colors\";\n\nconst H3 = styled.h3`\n  font-family: \"Oswald\", sans-serif;\n  font-size: 1.75rem;\n  color: ${Colors.DARK_CHOCOLATE};\n  margin: 0;\n`;\nexport default H3;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { CHOCOLATE_200, CHOCOLATE_800 } from \"../styles/colors\";\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nconst TransactionWrapper = styled.div`\n  background: ${CHOCOLATE_200};\n  padding: 1rem;\n  border-radius: 1rem;\n  font-family: \"Ubuntu Mono\", monospace;\n  margin-bottom: 1.25rem;\n  font-size: 1em;\n  overflow-x: scroll;\n  overflow-y: scroll;\n  a {\n    text-decoration: none;\n    color: ${CHOCOLATE_800};\n  }\n`;\n\nconst Transaction = ({ transaction, port }: any) => {\n\n  return (\n    <TransactionWrapper>\n      <Link to={`/${transaction.hash}/${port}`}>\n        <strong>{`Block ${transaction.blockNumber}: `}</strong>\n        {transaction.hash}\n      </Link>\n    </TransactionWrapper>\n  );\n};\n\nexport default Transaction;\n","import Web3 from \"web3\";\n\nconst getWeb3 = async (port: any) => {\n\n  const provider = new Web3.providers.WebsocketProvider(\n    `ws://127.0.0.1:${port}`,\n    {\n      headers: {\n        Origin: \"some_meaningful_name\"\n      }\n    }\n  );\n  const web3 = await new Web3(provider);\n  return web3;\n}\n\nexport default getWeb3;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport * as Colors from \"../styles/colors\";\nimport H3 from \"../styles/H3\";\nimport Transaction from \"./Transaction\";\nimport getWeb3 from \"../utils/getWeb3\";\n\nconst HomeContainer = styled.div`\n  padding: 1rem 2rem;\n`;\n\nconst TransactionsBox = styled.div`\n  background: ${Colors.CHOCOLATE_200};\n  padding: 1rem;\n  border-radius: 1rem;\n  font-family: \"Ubuntu Mono\", monospace;\n  margin-bottom: 1.25rem;\n  font-size: 1em;\n`;\n\nconst Home = ({port}: any) => {\n  const [transactions, setTransactions] = useState<any[]>([]);\n\n  const getPendingTransactions = async () => {\n\n    const web3 = await getWeb3(port);\n    const subscription = web3.eth.subscribe('pendingTransactions');\n\n    subscription.subscribe((error: any, result: any) => {\n      if (error) console.log(error)\n    })\n    .on('data', async (txHash: any) => {\n\n      try {\n        const txn = await web3.eth.getTransaction(txHash)\n\n        const transaction: any = (\n          <Transaction transaction={txn} port={port} key={Date.now()} />\n        );\n       \n        await setTransactions((prev: any) => {\n          return [...prev, transaction];\n        });\n\n        return function cleanup() {\n          subscription.unsubscribe();\n        };\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })\n  }\n\n  useEffect(() => {\n    getPendingTransactions();\n  }, []);\n\n  return (\n    <HomeContainer>\n      <H3>Transactions</H3>\n      <p>Transactions will be listed below as they are created.</p>\n        {transactions.length ? \n          transactions.filter((v,i) => {\n            if (i%2) {\n              return v; // uber hack to only display even (given the subscription is returning dupes)\n            }\n          }) \n        : (<TransactionsBox>Waiting for transactions</TransactionsBox>) }\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport * as Colors from \"../styles/colors\";\nimport H3 from \"../styles/H3\";\n\nimport {\n  Link,\n} from \"react-router-dom\";\n\nconst SettingsContainer = styled.div`\n  padding: 1rem 2rem;\n`;\n\nconst SettingsForm = styled.form`\n  label {\n    margin: 0.4rem 0;\n    display: block;\n\n  }\n  label input {\n    display: ;\n    margin: 0.4rem ;\n  }\n  input[type=submit] {\n    display: block;\n  }\n`;\n\nconst Settings = ({port, setPort, rpc, setRpc}: any) => {\n  const [newPort, setNewPort] = useState(port);\n  const [newRpc, setNewRpc] = useState(rpc);\n\n  const save: any = (e:any) => {\n    e.preventDefault();\n    setPort(newPort);\n    setRpc(newRpc);\n    // TODO display toast \n  };\n\n  return (\n    <SettingsContainer>\n      <H3>Settings</H3>\n      <SettingsForm onSubmit={save}>\n        <label>\n          Port\n          <input type=\"text\" value={newPort} onChange={(e: any) => setNewPort(e.target.value)} />\n        </label>\n        <label>\n          RPC\n          <input type=\"text\" value={newRpc} onChange={(e: any) => setNewRpc(e.target.value)} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </SettingsForm>\n    </SettingsContainer>\n  );\n};\n\nexport default Settings;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport * as Colors from \"../styles/colors\";\nimport H3 from \"../styles/H3\";\nimport Transaction from \"./Transaction\";\nimport getWeb3 from \"../utils/getWeb3\";\n\nconst AccountsContainer = styled.div`\n  padding: 1rem 2rem;\n`;\n\nconst AccountsBox = styled.div`\n  background: ${Colors.CHOCOLATE_200};\n  padding: 1rem;\n  border-radius: 1rem;\n  font-family: \"Ubuntu Mono\", monospace;\n  margin-bottom: 1.25rem;\n  font-size: 1em;\n`;\n\nconst Account = styled.div`\n  padding: 0.2rem 0.2rem;\n`;\n\nconst Accounts = ({port}: any) => {\n  const [accounts, setAccounts] = useState<any[]>([]);\n\n  const getAccounts = async () => {\n\n    const web3 = await getWeb3(port);\n    const list = (await web3.eth.getAccounts()).map((a: any, i: any) => {\n      return (<Account>{`[${i}] ${a}`}</Account>)\n    })\n\n    setAccounts(list);\n  }\n\n  useEffect(() => {\n    getAccounts();\n  }, []);\n\n  return (\n    <AccountsContainer>\n      <H3>Accounts</H3>\n      <p>The following accounts are currently available.</p>\n      <AccountsBox>\n        {accounts.length ? \n          accounts\n        : (<p>No accounts available</p>) }\n      </AccountsBox>\n    </AccountsContainer>\n  );\n};\n\nexport default Accounts;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as Colors from \"../styles/colors\";\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nconst NavBarContainer = styled.div`\n  width: 100%;\n  background-color: #EFE5DC;\n`;\n\nconst NavBar = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0.8rem 0;\n  border-bottom: solid 1px ${Colors.GRAY_300};\n  li {\n    display: inline;\n    padding: 1rem;\n  }\n  a {\n    font-weight: 500;\n    text-decoration: none;\n    color: ${Colors.DARK_CHOCOLATE};\n  }\n`;\n\nconst Navigation = ({}) => {\n  return (\n    <NavBarContainer>\n      <NavBar>\n        <li><span className=\"fa fa-bug\" style={{color: Colors.MINT_400}} /></li>\n        <li><Link to=\"/\">Transactions</Link></li>\n        <li><Link to=\"/accounts\">Accounts</Link></li>\n        <li><Link to=\"/settings\">Settings</Link></li>\n      </NavBar>\n    </NavBarContainer>\n  );\n};\n\nexport default Navigation;\n","import styled from \"styled-components\";\nimport * as Colors from \"./colors\";\n\nexport default styled.button`\n  background: ${Colors.MINT_400};\n  border: none;\n  border-radius: 0.25rem;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  text-transform: uppercase;\n  font-size: 1rem;\n  font-family: \"Fira Sans Condensed\", sans-serif;\n`;\n","import styled from \"styled-components\";\nimport * as Colors from \"../styles/colors\";\n\nconst SyntaxStyle = styled.div`\n  .hljs-comment,\n  .hljs-quote {\n    color: ${Colors.GREY};\n    font-style: italic;\n  }\n\n  .hljs-keyword,\n  .hljs-selector-tag,\n  .hljs-subst {\n    color: ${Colors.PINK_500};\n    font-weight: bold;\n  }\n\n  .hljs-number,\n  .hljs-literal,\n  .hljs-variable,\n  .hljs-template-variable,\n  .hljs-tag .hljs-attr {\n    color: ${Colors.WATERMELON_600};\n  }\n\n  .hljs-string,\n  .hljs-doctag {\n    color: ${Colors.PORSCHE_1};\n  }\n\n  .hljs-title,\n  .hljs-section,\n  .hljs-selector-id {\n    color: ${Colors.TEAL_1};\n    font-weight: bold;\n  }\n\n  .hljs-subst {\n    font-weight: normal;\n  }\n\n  .hljs-type,\n  .hljs-class .hljs-title {\n    color: ${Colors.TEAL_1};\n    font-weight: bold;\n  }\n\n  .hljs-tag,\n  .hljs-name,\n  .hljs-attribute {\n    color: ${Colors.TEAL_1};\n    font-weight: normal;\n  }\n\n  .hljs-built_in,\n  .hljs-builtin-name {\n    color: ${Colors.TEAL_1};\n  }\n`;\n\nexport default SyntaxStyle;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport * as Colors from \"../styles/colors\";\n\nexport const backgroundInherit = Colors.CHOCOLATE_200;\nexport const backgroundHighlight = Colors.YELLOW_200;\nexport const borderHighlight = Colors.ORANGE_300;\n\ninterface IHighlightProps {\n  isCurrent: boolean;\n}\n\nconst Row = styled.div`\n  background: ${({ isCurrent }: IHighlightProps) =>\n    isCurrent ? `${backgroundHighlight}` : `${backgroundInherit}`};\n  border-color: ${({ isCurrent }: IHighlightProps) =>\n    isCurrent ? `${borderHighlight}` : `${backgroundInherit}`};\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 0.4rem;\n  width: fit-content;\n  min-width: 100%;\n\n  &:hover .fas.fa-dot-circle.faded {\n    color: ${Colors.CI_RED};\n    opacity: 0.5;\n  }\n`;\n\nconst LineContainer = styled.span`\n  font-family: \"Ubuntu Mono\", monospace;\n  white-space: pre;\n  padding-left: 0.2rem;\n  cursor: text;\n`;\n\nconst LineNumber = styled.span`\n  color: ${Colors.GRAY_300};\n  padding-left: 0.2rem;\n  cursor: pointer;\n`;\n\ninterface IBreakpoint {\n  isBreakpoint: boolean;\n}\n\nconst Breakpoint = styled.i`\n  text-align: center;\n  display: inline-block;\n  color: ${({ isBreakpoint }: IBreakpoint) =>\n    isBreakpoint ? Colors.CI_RED : Colors.CHOCOLATE_200};\n  cursor: pointer;\n  padding-left: 0.2rem;\n  width: 1.1rem;\n  height: 1rem;\n`;\n\nexport interface IProps {\n  lineNumber: number;\n  lineContents: string;\n  isCurrent: boolean;\n  breakpoints: any[];\n  setBreakpoints: any;\n  lineRef: any;\n  sourceId: string;\n  fileName: string;\n  astId: number;\n  lineNumberIndentLength: number;\n}\n\nconst Line = ({\n  lineNumber,\n  lineContents,\n  isCurrent,\n  breakpoints,\n  setBreakpoints,\n  lineRef,\n  sourceId,\n  fileName,\n  astId,\n  lineNumberIndentLength,\n}: IProps) => {\n  const [isBreakpoint, updateBreakpoint] = useState(false);\n\n  const start = () => {\n    updateBreakpoint(\n      breakpoints.filter(breakpoint => {\n        return (\n          breakpoint.line === lineNumber && breakpoint.sourceId === sourceId\n        );\n      }).length > 0\n    );\n  };\n\n  const toggleBreakpoint = () => {\n    updateBreakpoint(!isBreakpoint);\n\n    if (isBreakpoint) {\n      const filteredBreakpoints = breakpoints.filter(\n        breakpoint =>\n          breakpoint.line !== lineNumber || breakpoint.sourceId !== sourceId\n      );\n      setBreakpoints(filteredBreakpoints);\n    } else {\n      const breakpoint: any = {\n        line: lineNumber,\n        sourceId,\n        compilationId: \"shimmedcompilation\",\n        fileName,\n        astId,\n      };\n      setBreakpoints((prev: any) => {\n        return [...prev, breakpoint];\n      });\n    }\n  };\n\n  useEffect(() => {\n    start();\n  }, [breakpoints]);\n\n  return (\n    <Row\n      key={`contract-source-${lineNumber}`}\n      isCurrent={isCurrent}\n      ref={lineRef}\n    >\n      <Breakpoint\n        className={\n          isBreakpoint ? \"fas fa-dot-circle\" : \"fas fa-dot-circle faded\"\n        }\n        isBreakpoint={isBreakpoint}\n        onClick={toggleBreakpoint}\n      />\n      <LineContainer>\n        <LineNumber onClick={toggleBreakpoint}>\n          {` `.repeat(lineNumberIndentLength)}\n          {lineNumber + 1}.{` `}\n        </LineNumber>\n        <span dangerouslySetInnerHTML={{ __html: lineContents }} />\n      </LineContainer>\n    </Row>\n  );\n};\n\nexport default Line;\n","import React, {\n  createRef,\n  useRef,\n  useEffect,\n  useState,\n  useLayoutEffect,\n} from \"react\";\nimport styled from \"styled-components\";\nimport SyntaxStyle from \"./SyntaxStyle\";\nimport Line from \"./Line\";\n\nconst SourceWrapper = styled.div`\n  padding: 1rem 0.5rem;\n  overflow-x: scroll;\n  overflow-y: scroll;\n  white-space: nowrap;\n`;\n\ninterface IProps {\n  activeLine: number;\n  selectedLine: number;\n  contractSource: string[];\n  breakpoints: any[];\n  setBreakpoints: any;\n  visible: boolean;\n  sourceIsActive: boolean;\n  sourceId: string;\n  fileName: string;\n  astId: number;\n}\n\nconst Source = ({\n  activeLine,\n  selectedLine,\n  contractSource,\n  breakpoints,\n  setBreakpoints,\n  visible,\n  sourceIsActive,\n  sourceId,\n  fileName,\n  astId,\n}: IProps) => {\n  const output: React.ReactNode[] = [];\n  const [scrollTop, setScrollTop] = useState(0);\n  const sourceRef = useRef<HTMLDivElement>(null);\n  const lineDigitLength = contractSource.length.toString().length;\n\n  let selectedLineRef: any;\n\n  contractSource.forEach((line: string) => {\n    const lineRef = createRef();\n    if (output.length === selectedLine) {\n      selectedLineRef = lineRef;\n    }\n    output.push(\n      <Line\n        lineNumber={output.length}\n        lineContents={line}\n        isCurrent={sourceIsActive && output.length === activeLine}\n        breakpoints={breakpoints}\n        setBreakpoints={setBreakpoints}\n        key={`contract-source-${output.length}`}\n        lineRef={lineRef}\n        sourceId={sourceId}\n        fileName={fileName}\n        astId={astId}\n        lineNumberIndentLength={\n          lineDigitLength - (output.length + 1).toString().length\n        }\n      />\n    );\n  });\n\n  useEffect(() => {\n    if (selectedLineRef) {\n      if (selectedLineRef.current) {\n        selectedLineRef.current.scrollIntoView({\n          behavior: \"auto\",\n          block: \"center\",\n        });\n      }\n    }\n  }, [selectedLine]);\n\n  useLayoutEffect(() => {\n    if (visible) {\n      if (sourceRef.current !== null) {\n        sourceRef.current.scrollTo({\n          top: scrollTop,\n          left: 0,\n          behavior: \"auto\",\n        });\n      }\n    }\n  }, [visible]);\n\n  const updateLine = (e: any) => {\n    setScrollTop(e.target.scrollTop);\n  };\n\n  return (\n    <>\n      {visible ? (\n        <SourceWrapper onScroll={updateLine} ref={sourceRef}>\n          <SyntaxStyle>{output}</SyntaxStyle>\n        </SourceWrapper>\n      ) : null}\n    </>\n  );\n};\n\nexport default Source;\n","import React, { useState } from \"react\";\nimport Source from \"./Source\";\nimport unified from \"unified\";\nimport stringify from \"rehype-dom-stringify\";\nimport low from \"lowlight\";\nimport { definer } from \"highlightjs-solidity\";\n\ninterface IProps {\n  sources: any;\n  activeTabIndex: number;\n  breakpoints: any[];\n  setBreakpoints: any;\n  activeLine: number;\n  selectedLine: number;\n  runningTabIndex: number;\n}\n\ninterface IPropsRenderer {\n  rows: any;\n  stylesheet: any;\n  useInlineStyles: any;\n}\n\nconst Sources = ({\n  sources,\n  activeTabIndex,\n  breakpoints,\n  setBreakpoints,\n  activeLine,\n  selectedLine,\n  runningTabIndex,\n}: IProps) => {\n  const [sourcesWithMarkup, setSourcesWithMarkup] = useState<any[]>([]);\n\n  const sourceComponents = sources.map((source: any, index: number) => {\n    const astId = source.ast.id;\n    const fileName = source.sourcePath.replace(/^.*[\\\\/]/, \"\");\n    const highlightedSource: string[] = [];\n\n    if (sourcesWithMarkup.length === 0) {\n      low.registerLanguage(\"solidity\", definer);\n      const tree: any = low.highlight(\"solidity\", source.source).value;\n      const processor: any = unified().use(stringify);\n      const highlightedMarkup: any = processor\n        .stringify({ type: \"root\", children: tree })\n        .toString();\n\n      highlightedMarkup.split(\"\\n\").forEach((lineMarkup: string) => {\n        highlightedSource.push(lineMarkup);\n      });\n\n      setSourcesWithMarkup(prevState => [...prevState, highlightedSource]);\n    }\n\n    return (\n      <Source\n        key={`contract-${astId}`}\n        visible={astId === activeTabIndex}\n        contractSource={\n          highlightedSource.length > 0\n            ? highlightedSource\n            : sourcesWithMarkup[index]\n        }\n        activeLine={activeLine}\n        selectedLine={selectedLine}\n        breakpoints={breakpoints}\n        setBreakpoints={setBreakpoints}\n        sourceIsActive={astId === runningTabIndex}\n        sourceId={source.id}\n        astId={astId}\n        fileName={fileName}\n      />\n    );\n  });\n\n  return <>{sourceComponents}</>;\n};\n\nexport default Sources;\n","const getDecodedValue = (inputObj: any) => {\n  const typeClass = inputObj.type.typeClass;\n\n  if (inputObj.error) {\n    return \"NA\";\n  }\n\n  if (typeClass === \"magic\") {\n    const variable: string = inputObj.type.variable;\n    if (\n      variable === \"block\" ||\n      variable === \"message\" ||\n      variable === \"transaction\"\n    ) {\n      return inputObj.value;\n    }\n  }\n\n  if (typeClass === \"contract\") {\n    return inputObj.value.address;\n  }\n\n  if (typeClass === \"int\" || typeClass === \"uint\") {\n    return inputObj.value.asBN.toString(); // temporarily converting to string to handle big numbers\n  }\n\n  if (typeClass === \"bool\") {\n    return inputObj.value.asBoolean;\n  }\n\n  if (typeClass === \"string\") {\n    return inputObj.value.asString;\n  }\n\n  if (typeClass === \"bytes\") {\n    return inputObj.value.asHex;\n  }\n\n  if (typeClass === \"address\") {\n    return inputObj.value.asAddress;\n  }\n\n  if (typeClass === \"struct\") {\n    const data = inputObj.value;\n    const arrayOfObjects = data.map(({ name, value }: any) => ({\n      [name]: getDecodedValue(value),\n    }));\n    const mergedObject = arrayOfObjects.reduce(\n      (acc: any, curr: any) => Object.assign(acc, curr),\n      {}\n    );\n    return mergedObject;\n  }\n\n  if (typeClass === \"array\") {\n    const array = inputObj.value;\n    const strArray = array.map(getDecodedValue);\n    return strArray;\n  }\n\n  return `${typeClass} is currently not supported`;\n};\n\nexport default getDecodedValue;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport getDecodedValue from \"../utils/getDecodedValue\";\nimport ReactJson from \"react-json-view\";\n// import { VARIABLES_OUTPUT as variablesTheme } from \"../../styles/components\";\nimport { CHOCOLATE_200 } from \"../styles/colors\";\n\nconst VariablesWrapper = styled.div`\n  background: ${CHOCOLATE_200};\n  padding: 1rem;\n  border-radius: 1rem;\n  font-family: \"Ubuntu Mono\", monospace;\n  margin-bottom: 1.25rem;\n  font-size: 1em;\n  * {\n    background-color: inherit !important;\n    font-family: \"Ubuntu Mono\", monospace;\n  }\n  ul,\n  ul li {\n    margin-top: 0em !important;\n    paddding-top: 0em !important;\n  }\n  overflow-x: scroll;\n  overflow-y: scroll;\n`;\n\nexport interface IProps {\n  variables: any;\n}\n\nconst Variables = ({ variables }: IProps) => {\n  const state: any = {};\n\n  if (variables) {\n    const variableKeys = Object.keys(variables);\n    variableKeys.forEach(variable => {\n      const value = getDecodedValue(variables[variable]);\n      state[variable] = value;\n    });\n  }\n\n  return (\n    <VariablesWrapper>\n      <ReactJson\n        name={null}\n        src={state}\n        displayDataTypes={false}\n        collapseStringsAfterLength={34}\n        collapsed={1}\n        // theme={variablesTheme}\n      />\n    </VariablesWrapper>\n  );\n};\n\nexport default Variables;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as Colors from \"../styles/colors\";\n\nconst TrayWrapper = styled.div`\n  background: ${Colors.CHOCOLATE_200};\n  padding: 1rem;\n  border-radius: 1rem;\n  font-size: 1em;\n  overflow-x: scroll;\n  overflow-y: scroll;\n`;\n\nconst Row = styled.div`\n  margin: 0.1rem 0;\n  cursor: pointer;\n  padding: 0.25rem 0.1rem;\n  border-width: 0.1rem;\n  border-radius: 0.5rem;\n\n  &:hover {\n    background-color: ${Colors.GRAY_100};\n  }\n`;\n\nconst Breakpoint = styled.span`\n  margin-left: 0.4rem;\n`;\n\nconst Icon = styled.span`\n  color: ${Colors.CI_RED};\n`;\n\nconst Badge = styled.span`\n  background: ${Colors.CHOCOLATE_400};\n  border: solid 1px ${Colors.CHOCOLATE_500};\n  border-radius: 0.5rem;\n  padding: 0.025rem 0.2rem;\n  color: #fff;\n`;\n\nconst Remove = styled.span`\n  color: ${Colors.CHOCOLATE_400};\n  margin-left: 0.25rem;\n`;\n\nexport interface IProps {\n  breakpoints: any;\n  setBreakpoints: any;\n  setActiveTabIndex: any;\n  setSelectedLine: any;\n}\n\nconst Tray = ({\n  breakpoints,\n  setBreakpoints,\n  setActiveTabIndex,\n  setSelectedLine,\n}: IProps) => {\n  const removeBreakpoint = (sourceId: number, lineNumber: number) => {\n    const filteredBreakpoints = breakpoints.filter((breakpoint: any) => {\n      return breakpoint.line !== lineNumber || breakpoint.sourceId !== sourceId;\n    });\n    setBreakpoints(filteredBreakpoints);\n  };\n\n  const jumptoLine = (astId: number, lineNumber: number) => {\n    setActiveTabIndex(astId);\n    setSelectedLine(lineNumber);\n  };\n\n  const list = breakpoints.map((breakpoint: any, index: number) => {\n    const sourceId = breakpoint.sourceId;\n    const fileName = breakpoint.fileName;\n    const lineNumber = breakpoint.line;\n    const astId = breakpoint.astId;\n    return (\n      <Row key={`tray-breakpoint-${index}`}>\n        <Icon\n          className={`fas fa-dot-circle`}\n          onClick={() => removeBreakpoint(sourceId, lineNumber)}\n        />\n        <Breakpoint onClick={() => jumptoLine(astId, lineNumber)}>\n          {fileName}\n          <Badge>{lineNumber + 1}</Badge>\n        </Breakpoint>\n        <Remove\n          className={`fas fa-times-circle`}\n          onClick={() => removeBreakpoint(sourceId, lineNumber)}\n        />\n      </Row>\n    );\n  });\n\n  return (\n    <TrayWrapper>\n      {list.length > 0\n        ? list\n        : `Add a breakpoint by clicking to the left of the line`}\n    </TrayWrapper>\n  );\n};\n\nexport default Tray;\n","import styled from \"styled-components\";\n\nexport const size = \"25px\";\nexport default styled.i`\n  width: ${size};\n  height: ${size};\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n`;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Icon from \"./Icon\";\n\ninterface IProps {\n  className?: string;\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst StyledIcon = styled(Icon)`\n  animation: ${rotate} 2s linear infinite;\n`;\n\nexport default ({ className = \"\" }: IProps) => (\n  <StyledIcon className={`fal fa-spinner ${className}`} />\n);\n","import styled from \"styled-components\";\n\nexport const size = \"25px\";\nexport default styled.i`\n  width: ${size};\n  height: ${size};\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport LoadingSmall from \"../styles/LoadingSmall\";\nimport IconBase from \"../styles/IconBase\";\nimport * as Colors from \"../styles/colors\";\n\nconst TxSuccess = styled(IconBase)`\n  color: ${Colors.CI_GREEN};\n`;\n\nconst TxFail = styled(IconBase)`\n  color: ${Colors.CI_RED};\n`;\n\ninterface IProps {\n  status?: any;\n}\n\nconst StatusIcon = ({ status }: IProps) => {\n  return (\n    <>\n      {status === null ? (\n        <LoadingSmall />\n      ) : status ? (\n        <TxSuccess\n          className=\"fas fa-check-circle\"\n          title=\"Transaction Succeeded\"\n        />\n      ) : (\n        <TxFail className=\"fas fa-times-circle\" title=\"Transaction Failed\" />\n      )}\n    </>\n  );\n};\n\nexport default StatusIcon;\n","import styled from \"styled-components\";\nimport * as Colors from \"./colors\";\n\nexport const padding = \"1.5rem\";\nexport const radius = \"0.5rem\";\n\nexport default styled.div`\n  background: ${Colors.CHOCOLATE_200};\n  padding: ${padding};\n  border-radius: ${radius};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { radius } from \"../styles/MetaWrapper\";\nimport * as Colors from \"../styles/colors\";\n\nconst Wrapper = styled.div`\n  grid-template-columns: 3.5fr 1.5fr;\n  display: grid;\n`;\n\nconst StatusContainer = styled.div`\n  background: ${Colors.RED_100};\n  border: solid 1px ${Colors.RED_600};\n  color: ${Colors.RED_600};\n  padding: 1rem 1rem;\n  margin-top: 1rem;\n  border-radius: ${radius};\n  font-family: \"Ubuntu Mono\", monospace;\n  font-size: 1rem;\n\n  > * {\n    &:not(:last-child) {\n      margin: 0 0.2rem 0 0;\n    }\n  }\n`;\n\ninterface IProps {\n  returnValue: any;\n}\n\nconst StatusMessage = ({ returnValue }: IProps) => {\n  let statusDescription: any | null;\n  let statusMessage: any | null;\n\n  if (returnValue?.length > 0) {\n    switch (returnValue[0].kind) {\n      case \"revert\":\n        statusDescription = `VM Exception while processing transaction`;\n        statusMessage = `${returnValue[0].kind} -- ${returnValue[0].arguments[0].value.value.asString}`;\n        break;\n      case \"selfdestruct\":\n      case \"return\":\n      default:\n        return <></>;\n        break;\n    }\n  }\n\n  return (\n    <>\n      {returnValue ? (\n        <Wrapper>\n          <StatusContainer>\n            {`${statusDescription}: ${statusMessage}`}\n          </StatusContainer>\n        </Wrapper>\n      ) : null}\n    </>\n  );\n};\n\nexport default StatusMessage;\n","import styled from \"styled-components\";\nimport * as Colors from \"./colors\";\n\nconst borderRadius = \"0.3125rem\";\nconst borderWidth = \"0.125rem\";\nconst borderStyle = \"solid\";\nconst borderColor = Colors.MILK_CHOCOLATE;\nconst border = `${borderWidth} ${borderStyle} ${borderColor}`;\nexport const style = `\n  border-top: ${border};\n  border-bottom: ${border};\n  border-left: ${border};\n  border-right: 0px;\n  padding: 0.5rem 1.5rem;\n  text-decoration: none;\n  &:first-child {\n    border-radius: ${borderRadius} 0 0 ${borderRadius};\n  }\n  &:last-child {\n    border-radius: 0 ${borderRadius} ${borderRadius} 0;\n    border-right: ${border};\n  }\n  &:only-child {\n    border-radius: ${borderRadius};\n  }\n  cursor: pointer;\n  text-transform: uppercase;\n  font-size: 1rem;\n  font-family: \"Fira Sans\", sans-serif;\n`;\n\nconst TabButton = styled.button`\n  ${style}\n  background: transparent;\n  color: ${Colors.MILK_CHOCOLATE};\n`;\nexport default TabButton;\n","import styled from \"styled-components\";\nimport { style as TabButtonStyle } from \"./TabButton\";\nimport * as Colors from \"./colors\";\n\nexport interface IProps {\n  selected?: boolean;\n}\n\nconst Tab = styled.div`\n  ${TabButtonStyle}\n  /* To make sure padding works in <a> tag */\n  display: inline-block;\n  background: ${({ selected }: IProps) =>\n    selected ? Colors.MILK_CHOCOLATE : \"transparent\"};\n  color: ${({ selected }: IProps) =>\n    selected ? \"white\" : Colors.MILK_CHOCOLATE};\n`;\n\nexport default Tab;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport StyledTab from \"../styles/Tab\";\nimport Tooltip from \"../styles/Tooltip\";\nimport * as Colors from \"../styles/colors\";\n\ninterface IIndexProps {\n  activeTabIndex: number;\n  index: number;\n}\n\nconst TabButton = styled(StyledTab)`\n  background: ${({ activeTabIndex, index }: IIndexProps) =>\n    activeTabIndex === index ? `${Colors.TEAL_2}` : `${Colors.WHITE}`};\n  border-color: ${Colors.TEAL_1} !important;\n  color: inherit;\n  text-transform: none;\n\n  &:hover {\n    background: ${Colors.TEAL_1};\n    color: ${Colors.WHITE};\n    * {\n      color: ${Colors.WHITE};\n    }\n  }\n\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  flex-basis: auto;\n  position: relative;\n`;\n\nconst ActiveIcon = styled.div`\n  color: ${Colors.ORANGE_400};\n  font-size: 0.6em;\n  vertical-align: middle;\n  position: absolute;\n  right: 0.6rem;\n  top: 0.9rem;\n`;\n\ninterface IProps {\n  index: number;\n  tabName: string;\n  activeTabIndex: number;\n  setActiveTabIndex: any;\n  tabIsRunning: boolean;\n}\n\nconst Tab = ({\n  index,\n  tabName,\n  activeTabIndex,\n  setActiveTabIndex,\n  tabIsRunning,\n}: IProps) => {\n  return (\n    // <Tooltip placement=\"top\" overlay={<span>{tabName}</span>}>\n    <>\n      <TabButton\n        onClick={() => setActiveTabIndex(index)}\n        selected={activeTabIndex === index}\n        activeTabIndex={activeTabIndex}\n        index={index}\n      >\n        {tabName}{\" \"}\n        {tabIsRunning ? <ActiveIcon className=\"fas fa-dot-circle\" /> : null}\n      </TabButton>\n    </>\n    // </Tooltip>\n  );\n};\n\nexport default Tab;\n","import React from \"react\";\nimport Tab from \"./Tab\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  sources: any;\n  setActiveTabIndex: any;\n  activeTabIndex: number;\n  runningTabIndex: number;\n}\n\nconst TabsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n`;\n\nconst Tabs = ({\n  sources,\n  setActiveTabIndex,\n  activeTabIndex,\n  runningTabIndex,\n}: IProps) => {\n  const tabs = sources.map((source: any) => {\n    const fileName = source.sourcePath.replace(/^.*[\\\\/]/, \"\");\n    const astId = source.ast.id;\n    return (\n      <Tab\n        key={`contract-${astId}`}\n        index={astId}\n        tabName={fileName}\n        setActiveTabIndex={setActiveTabIndex}\n        activeTabIndex={activeTabIndex}\n        tabIsRunning={astId === runningTabIndex}\n      />\n    );\n  });\n\n  return <TabsWrapper>{tabs}</TabsWrapper>;\n};\n\nexport default Tabs;\n","import React from \"react\";\nimport Tooltip from \"../styles/Tooltip\";\nimport * as Colors from \"../styles/colors\";\n\ninterface IProps {\n  title: string;\n  children?: React.ReactElement;\n}\n\nconst overlayStyle = {\n  padding: \"0.5rem 1rem\",\n  borderRadius: \"0.5rem\",\n  background: `${Colors.GRAY_600}`,\n  opacity: 1,\n  maxHeight: \"15rem\",\n  overflow: \"auto\",\n};\n\nconst DebugTooltip = ({ title, children }: IProps) => {\n  return (\n    // <Tooltip placement=\"top\" overlay={<span>{title}</span>} trigger={[\"hover\"]} overlayStyle={overlayStyle}>\n    <>\n      {children}\n    </>\n    // </Tooltip>\n  );\n};\n\nexport default DebugTooltip;\n","import React from \"react\";\nimport { GlobalHotKeys } from \"react-hotkeys\";\n\ninterface IProps {\n  executeAction: (debugAction: string) => Promise<void>;\n  start: () => Promise<void>;\n}\n\nconst KeyboardShortcuts = ({ executeAction, start }: IProps) => {\n  const keyMap = {\n    STEP_OVER: [\"o\", \"f10\"],\n    STEP_INTO: [\"i\", \"f11\"],\n    STEP_OUT: [\"u\", \"shift+f11\"],\n    CONTINUE_UNTIL: [\"c\", \"f8\"],\n    RESTART: [\"r\"],\n  };\n\n  const over = () => {\n    executeAction(\"over\");\n  };\n\n  const into = () => {\n    executeAction(\"into\");\n  };\n\n  const out = () => {\n    executeAction(\"out\");\n  };\n\n  const continueUntil = () => {\n    executeAction(\"continueUntil\");\n  };\n\n  const restart = () => {\n    start();\n  };\n\n  const handlers = {\n    STEP_OVER: over,\n    STEP_INTO: into,\n    STEP_OUT: out,\n    CONTINUE_UNTIL: continueUntil,\n    RESTART: restart,\n  };\n\n  return (\n    <GlobalHotKeys keyMap={keyMap} handlers={handlers} allowChanges={true} />\n  );\n};\n\nexport default KeyboardShortcuts;\n","import styled from \"styled-components\";\n\nexport interface IProps {\n  marginBottom?: string;\n}\n\nconst List = styled.div`\n  > * {\n    &:not(:last-child) {\n      margin-bottom: ${({ marginBottom = \"1rem\" }: IProps) => marginBottom};\n    }\n  }\n`;\nexport default List;\n","import React from \"react\";\nimport RingLoader from \"react-spinners/RingLoader\";\nimport styled from \"styled-components\";\nimport * as Colors from \"./colors\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nconst Loading = (props: any) => (\n  <Wrapper {...props}>\n    <RingLoader color={Colors.DARK_CHOCOLATE} />\n  </Wrapper>\n);\nexport default Loading;\n","import React, { useEffect, useState } from 'react';\n\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nimport H3 from \"../styles/H3\";\nimport PrimaryButton from \"../styles/PrimaryButton\";\nimport Sources from \"./Sources\";\nimport Variables from \"./Variables\";\nimport Tray from \"./Tray\";\nimport StatusIcon from \"./StatusIcon\";\nimport StatusMessage from \"./StatusMessage\";\nimport Tabs from \"./Tabs\";\nimport DebugTooltip from \"./DebugTooltip\";\nimport KeyboardShortcuts from \"./KeyboardShortcuts\";\nimport List from \"../styles/List\";\nimport * as Colors from \"../styles/colors\";\nimport Loading from \"../styles/Loading\";\n\nimport TruffleDebugger from \"@truffle/debugger\";\nimport * as Codec from \"@truffle/codec\";\nimport { getTransactionSourcesBeforeStarting } from \"@truffle/debug-utils\";\nimport Provider from \"@truffle/provider\";\n\nimport {\n  useParams\n} from \"react-router-dom\";\n\nconst DebuggerWrapper = styled(List)`\n  height: 90vh;\n  display: grid;\n  grid-template-rows: auto auto auto 1fr;\n  grid-template-columns: 1fr;\n  padding: 1rem 2rem;\n`;\n\nconst Header = styled(H3)`\n  margin: 0 0 2.5rem;\n  grid-row: 1;\n`;\n\nconst ButtonsWrapper = styled.div`\n  grid-row: 2;\n`;\n\nconst TopRowWrapper = styled.div`\n  grid-row: 3;\n  display: grid;\n  grid-template-columns: minmax(36rem, 3.5fr) 1.5fr;\n  grid-column-gap: 1.25rem;\n`;\n\nconst SourceRowWrapper = styled.div`\n  overflow-y: overlay;\n  grid-row: 4;\n  display: grid;\n  grid-template-columns: minmax(36rem, 3.5fr) 1.5fr;\n  grid-column-gap: 1.25rem;\n`;\n\nconst TabsWrapper = styled.div`\n  * {\n    align-self: flex-end;\n  }\n`;\n\nconst VariablesTitle = styled(H3)`\n  align-self: flex-end;\n`;\n\nconst BreakpointsTitle = styled(H3)`\n  margin-bottom: 1rem;\n`;\n\nconst TxHash = styled.span`\n  font-weight: lighter;\n`;\n\nconst DebugButton = styled(PrimaryButton)`\n  width: 4rem;\n  margin: 0 0.5rem 1rem 0;\n`;\n\nconst DebugButtonOver = styled(DebugButton)`\n  .fa-sync-alt {\n    max-height: 0.5rem;\n    overflow: hidden;\n    position: relative;\n    top: -0.25rem;\n    left: 0.2rem;\n  }\n\n  .fa-circle {\n    position: relative;\n    top: 0.05rem;\n    left: -0.48rem;\n    font-size: 0.35rem;\n  }\n`;\n\nconst SourceWrapper = styled.div`\n  grid-column: 1;\n  display: grid;\n  overflow-x: auto;\n  overflow-y: auto;\n  background: ${Colors.CHOCOLATE_200};\n  border-radius: 1rem;\n`;\n\nconst RightColumnWrapper = styled.div`\n  grid-column: 2;\n  display: grid;\n  grid-template-rows: minmax(30%, 60%) 3rem auto;\n`;\n\nconst LoadingWrapper = styled(Loading)`\n  min-height: 18rem;\n`;\n\nconst Debugger = ({}) => {\n  const [session, setSession] = useState<null | any>(null);\n  const [variables, setVariables] = useState<null | any>(null);\n  const [returnValue, setReturnValue] = useState<any | any>(null);\n  const [sources, setSources] = useState<any | any>(null);\n  const [breakpoints, setBreakpoints] = useState<any[]>([]);\n  const [status, setStatus] = useState<null | boolean>(null);\n  const [selectedLine, setSelectedLine] = useState<number>(0);\n  const [activeLine, setActiveLine] = useState<number>(0);\n  const [activeTabIndex, setActiveTabIndex] = useState<number>(0);\n  const [runningTabIndex, setRunningTabIndex] = useState<number>(0);\n\n  let { txHash, port } = useParams();\n\n  const providerUrl = `http://127.0.0.1:${port}`;\n  const transaction: any = {\n    hash: txHash\n  };\n\n  const provider = Provider.create({\n    url: providerUrl,\n  });\n\n  const start = async () => {\n    setVariables(null);\n    setSession(null);\n    setReturnValue(null);\n    setBreakpoints([]);\n\n    const res:any = await axios.get(\"http://127.0.0.1:54321/artifacts\")\n    const artifacts: any = res.data;\n\n    const input: {\n      compilations: Codec.Compilations.Compilation[];\n    } = {\n      compilations: [],\n    };\n\n    input.compilations = Codec.Compilations.Utils.shimArtifacts(\n      artifacts\n    );\n\n    const bugger = await TruffleDebugger.forTx(transaction.hash, {\n      provider,\n      ...input\n    });\n\n    const initializedSession = bugger.connect();\n    await initializedSession.ready();\n\n    const sourcesInvolvedInTransaction = await getTransactionSourcesBeforeStarting(\n      bugger\n    );\n\n    const sourceIndicesInvolvedInTransaction = sourcesInvolvedInTransaction.map(\n      (source:any) => {\n        return parseInt(source.id, 10)\n      }\n    );\n\n    const sources = input.compilations[0].sources.filter((_: any, index: any) => {\n      return sourceIndicesInvolvedInTransaction.includes(index)\n    })\n\n    setSources(\n      sources\n    );\n\n    setSession(initializedSession);\n    setVariables(await initializedSession.variables());\n    setReturnValue(await initializedSession.returnValue());\n    setStatus(await initializedSession.state.evm.transaction.status);\n\n    const currentSource = await initializedSession.view(\n      TruffleDebugger.selectors.solidity.current.source\n    );\n    setRunningTabIndex(currentSource.ast.id);\n    setActiveTabIndex(currentSource.ast.id);\n\n    const init = initializedSession.view(\n      TruffleDebugger.selectors.solidity.current.sourceRange\n    );\n\n    setActiveLine(init.lines.start.line);\n    setSelectedLine(init.lines.start.line);\n  };\n\n  const executeAction = async (debugAction: string) => {\n\n    if (session) {\n      switch (debugAction) {\n        case \"continueUntil\": {\n          await session.removeAllBreakpoints();\n          breakpoints.forEach(\n            async breakpoint => await session.addBreakpoint(breakpoint)\n          );\n          await session.continueUntilBreakpoint();\n          break;\n        }\n        case \"over\":\n          await session.stepOver();\n          break;\n        case \"into\":\n          await session.stepInto();\n          break;\n        case \"out\":\n          await session.stepOut();\n          break;\n        default:\n          break;\n      }\n\n      setVariables(await session.variables());\n      setReturnValue(await session.returnValue());\n\n      const source = await session.view(\n        TruffleDebugger.selectors.solidity.current.source\n      );\n      setRunningTabIndex(source.ast.id);\n      setActiveTabIndex(source.ast.id);\n\n      const sourceRange = await session.view(\n        TruffleDebugger.selectors.solidity.current.sourceRange\n      );\n      setActiveLine(sourceRange.lines.start.line);\n      setSelectedLine(sourceRange.lines.start.line);\n    }\n  };\n\n  useEffect(() => {\n    start();\n  }, []);\n\n  return (\n    <DebuggerWrapper>\n      <KeyboardShortcuts executeAction={executeAction} start={start} />\n      <Header>\n        <StatusIcon status={status} />\n        {` `}\n        <TxHash>\n          TX{` `}\n          {transaction.hash || `...`}\n        </TxHash>\n        <StatusMessage returnValue={returnValue} />\n      </Header>\n      <ButtonsWrapper>\n        <DebugTooltip title={`Continue (F8 or c)`}>\n          <DebugButton\n            disabled={!variables}\n            onClick={() => executeAction(\"continueUntil\")}\n          >\n            <i className=\"fas fa-play\" />\n          </DebugButton>\n        </DebugTooltip>\n        <DebugTooltip title={`Step Over (F10 or o)`}>\n          <DebugButtonOver\n            onClick={() => executeAction(\"over\")}\n            disabled={!variables}\n          >\n            <i className=\"fa fa-sync-alt\" />\n            <i className=\"fa fa-circle\" />\n          </DebugButtonOver>\n        </DebugTooltip>\n        <DebugTooltip title={`Step Into (F11 or i)`}>\n          <DebugButton\n            onClick={() => executeAction(\"into\")}\n            disabled={!variables}\n          >\n            <i className=\"fas fa-arrow-to-bottom\" />\n          </DebugButton>\n        </DebugTooltip>\n        <DebugTooltip title={`Step Out (Shift+F10 or u)`}>\n          <DebugButton\n            onClick={() => executeAction(\"out\")}\n            disabled={!variables}\n          >\n            <i className=\"fas fa-arrow-to-top\" />\n          </DebugButton>\n        </DebugTooltip>\n        <DebugTooltip title={`Restart (r)`}>\n          <DebugButton onClick={start}>\n            <i className=\"fas fa-redo-alt\" />\n          </DebugButton>\n        </DebugTooltip>\n      </ButtonsWrapper>\n      {variables ? (\n        <>\n          <TopRowWrapper>\n            <TabsWrapper>\n              <Tabs\n                sources={sources}\n                setActiveTabIndex={setActiveTabIndex}\n                activeTabIndex={activeTabIndex}\n                runningTabIndex={runningTabIndex}\n              />\n            </TabsWrapper>\n            <VariablesTitle>Variables</VariablesTitle>\n          </TopRowWrapper>\n          <SourceRowWrapper>\n            <SourceWrapper>\n              <Sources\n                sources={sources}\n                activeTabIndex={activeTabIndex}\n                activeLine={activeLine}\n                selectedLine={selectedLine}\n                breakpoints={breakpoints}\n                setBreakpoints={setBreakpoints}\n                runningTabIndex={runningTabIndex}\n              />\n            </SourceWrapper>\n            <RightColumnWrapper>\n              <Variables variables={variables} />\n              <BreakpointsTitle>Breakpoints</BreakpointsTitle>\n              <Tray\n                breakpoints={breakpoints}\n                setBreakpoints={setBreakpoints}\n                setActiveTabIndex={setActiveTabIndex}\n                setSelectedLine={setSelectedLine}\n              />\n            </RightColumnWrapper>\n          </SourceRowWrapper>\n        </>\n      ) : (\n        <LoadingWrapper />\n      )}\n    </DebuggerWrapper>\n  );\n};\n\nexport default Debugger;\n","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport Settings from './components/Settings';\nimport Accounts from './components/Accounts';\nimport Navigation from './components/Navigation';\nimport Debugger from './components/Debugger';\n\nimport { useState } from 'react';\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [port, setPort] = useState<number>(7545);\n  const [rpc, setRpc] = useState<string>('localhost');\n\n  return (\n    <BrowserRouter basename=\"/debug\">\n      <Switch>\n        <Route path=\"/\" exact>\n          <div className=\"App\">\n            <div className=\"App-body\">\n              <Navigation />\n              <Home port={port} />\n            </div>\n          </div>\n        </Route>\n        <Route path=\"/accounts\" exact>\n          <div className=\"App\">\n            <div className=\"App-body\">\n              <Navigation />\n              <Accounts port={port} />\n            </div>\n          </div>\n        </Route>\n        <Route path=\"/settings\" exact>\n          <div className=\"App\">\n            <div className=\"App-body\">\n              <Navigation />\n              <Settings port={port} setPort={setPort} rpc={rpc} setRpc={setRpc} />\n            </div>\n          </div>\n        </Route>\n        <Route path=\"/:txHash/:port\">\n          <div className=\"App\">\n            <div className=\"App-body\">\n              <Navigation />\n              <Debugger />\n            </div>\n          </div>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}